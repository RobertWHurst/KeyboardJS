{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///keyboard.min.js","webpack:///webpack/bootstrap fc75acd25e5136957a53","webpack:///./index.js","webpack:///./lib/keyboard.js","webpack:///./lib/locale.js","webpack:///./lib/key-combo.js","webpack:///./locales/us.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","KeyCombo","Locale","Keyboard","undefined","_keyboard","_keyboard2","_locale","_locale2","_keyCombo","_keyCombo2","_us","_us2","keyboard","setLocale","global","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","targetWindow","targetElement","platform","userAgent","_currentContext","_contexts","_listeners","_appliedListeners","_locales","_targetElement","_targetWindow","_targetPlatform","_targetUserAgent","_isModernBrowser","_targetKeyDownBinding","_targetKeyUpBinding","_targetResetBinding","_paused","setContext","watch","localeName","localeBuilder","locale","_localeName","pressedKeys","localName","keyComboStr","pressHandler","releaseHandler","preventRepeatByDefault","bind","push","keyCombo","preventRepeat","unbind","listener","comboMatches","isEqual","pressHandlerMatches","releaseHandlerMatches","splice","contextName","releaseAllKeys","callback","previousContextName","getContext","targetPlatform","targetUserAgent","_this","stop","addEventListener","attachEvent","Error","nodeType","navigator","document","event","pressKey","keyCode","releaseKey","_bindEvent","_unbindEvent","_applyBindings","_clearBindings","eventName","handler","removeEventListener","detachEvent","listenerGroups","listenerGroupMap","listeners","concat","sort","a","b","keyNames","forEach","l","mapIndex","slice","_getGroupedListeners","check","j","join","includes","index","indexOf","addListener","on","removeListener","off","name","_appliedMacros","_keyMap","_killKeyCodes","_macros","macro","keyName","keyCodes","getKeyCodes","setKillKey","getKeyNames","_applyMacros","killKeyCodeIndex","_clearMacros","macros","sourceStr","subCombos","parseComboStr","reduce","memo","nextSubCombo","pressedKeyNames","startingKeyNameIndex","_checkSubCombo","otherKeyCombo","subCombo","otherSubCombo","endIndex","escapedKeyName","comboDeliminator","keyDeliminator","sequenceDeliminator","subComboStrs","_splitStr","combo","str","deliminator","s","d","ca","ci","trim","bindKeyCode","bindMacro","String","fromCharCode","capitalKeyName","semicolonKeyCode","match","dashKeyCode","leftCommandKeyCode","rightCommandKeyCode"],"mappings":"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","file":"keyboard.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"keyboardJS\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"keyboardJS\"] = factory();\n\telse\n\t\troot[\"keyboardJS\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"keyboardJS\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"keyboardJS\"] = factory();\n\telse\n\t\troot[\"keyboardJS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.KeyCombo = exports.Locale = exports.Keyboard = undefined;\n\t\n\tvar _keyboard = __webpack_require__(1);\n\t\n\tvar _keyboard2 = _interopRequireDefault(_keyboard);\n\t\n\tvar _locale = __webpack_require__(2);\n\t\n\tvar _locale2 = _interopRequireDefault(_locale);\n\t\n\tvar _keyCombo = __webpack_require__(3);\n\t\n\tvar _keyCombo2 = _interopRequireDefault(_keyCombo);\n\t\n\tvar _us = __webpack_require__(4);\n\t\n\tvar _us2 = _interopRequireDefault(_us);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar keyboard = new _keyboard2.default();\n\tkeyboard.setLocale('us', _us2.default);\n\t\n\tmodule.exports = keyboard;\n\texports.Keyboard = _keyboard2.default;\n\texports.Locale = _locale2.default;\n\texports.KeyCombo = _keyCombo2.default;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _locale = __webpack_require__(2);\n\t\n\tvar _locale2 = _interopRequireDefault(_locale);\n\t\n\tvar _keyCombo = __webpack_require__(3);\n\t\n\tvar _keyCombo2 = _interopRequireDefault(_keyCombo);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Keyboard = function () {\n\t  function Keyboard(targetWindow, targetElement, platform, userAgent) {\n\t    _classCallCheck(this, Keyboard);\n\t\n\t    this._locale = null;\n\t    this._currentContext = null;\n\t    this._contexts = {};\n\t    this._listeners = [];\n\t    this._appliedListeners = [];\n\t    this._locales = {};\n\t    this._targetElement = null;\n\t    this._targetWindow = null;\n\t    this._targetPlatform = '';\n\t    this._targetUserAgent = '';\n\t    this._isModernBrowser = false;\n\t    this._targetKeyDownBinding = null;\n\t    this._targetKeyUpBinding = null;\n\t    this._targetResetBinding = null;\n\t    this._paused = false;\n\t\n\t    this.setContext('global');\n\t    this.watch(targetWindow, targetElement, platform, userAgent);\n\t  }\n\t\n\t  _createClass(Keyboard, [{\n\t    key: 'setLocale',\n\t    value: function setLocale(localeName, localeBuilder) {\n\t      var locale = null;\n\t      if (typeof localeName === 'string') {\n\t\n\t        if (localeBuilder) {\n\t          locale = new _locale2.default(localeName);\n\t          localeBuilder(locale, this._targetPlatform, this._targetUserAgent);\n\t        } else {\n\t          locale = this._locales[localeName] || null;\n\t        }\n\t      } else {\n\t        locale = localeName;\n\t        localeName = locale._localeName;\n\t      }\n\t\n\t      this._locale = locale;\n\t      this._locales[localeName] = locale;\n\t      if (locale) {\n\t        this._locale.pressedKeys = locale.pressedKeys;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getLocale',\n\t    value: function getLocale(localName) {\n\t      localName || (localName = this._locale.localeName);\n\t      return this._locales[localName] || null;\n\t    }\n\t  }, {\n\t    key: 'bind',\n\t    value: function bind(keyComboStr, pressHandler, releaseHandler, preventRepeatByDefault) {\n\t      if (keyComboStr === null || typeof keyComboStr === 'function') {\n\t        preventRepeatByDefault = releaseHandler;\n\t        releaseHandler = pressHandler;\n\t        pressHandler = keyComboStr;\n\t        keyComboStr = null;\n\t      }\n\t\n\t      if (keyComboStr && (typeof keyComboStr === 'undefined' ? 'undefined' : _typeof(keyComboStr)) === 'object' && typeof keyComboStr.length === 'number') {\n\t        for (var i = 0; i < keyComboStr.length; i += 1) {\n\t          this.bind(keyComboStr[i], pressHandler, releaseHandler);\n\t        }\n\t        return;\n\t      }\n\t\n\t      this._listeners.push({\n\t        keyCombo: keyComboStr ? new _keyCombo2.default(keyComboStr) : null,\n\t        pressHandler: pressHandler || null,\n\t        releaseHandler: releaseHandler || null,\n\t        preventRepeat: preventRepeatByDefault || false,\n\t        preventRepeatByDefault: preventRepeatByDefault || false\n\t      });\n\t    }\n\t  }, {\n\t    key: 'unbind',\n\t    value: function unbind(keyComboStr, pressHandler, releaseHandler) {\n\t      if (keyComboStr === null || typeof keyComboStr === 'function') {\n\t        releaseHandler = pressHandler;\n\t        pressHandler = keyComboStr;\n\t        keyComboStr = null;\n\t      }\n\t\n\t      if (keyComboStr && (typeof keyComboStr === 'undefined' ? 'undefined' : _typeof(keyComboStr)) === 'object' && typeof keyComboStr.length === 'number') {\n\t        for (var i = 0; i < keyComboStr.length; i += 1) {\n\t          this.unbind(keyComboStr[i], pressHandler, releaseHandler);\n\t        }\n\t        return;\n\t      }\n\t\n\t      for (var i = 0; i < this._listeners.length; i += 1) {\n\t        var listener = this._listeners[i];\n\t\n\t        var comboMatches = !keyComboStr && !listener.keyCombo || listener.keyCombo && listener.keyCombo.isEqual(keyComboStr);\n\t        var pressHandlerMatches = !pressHandler && !releaseHandler || !pressHandler && !listener.pressHandler || pressHandler === listener.pressHandler;\n\t        var releaseHandlerMatches = !pressHandler && !releaseHandler || !releaseHandler && !listener.releaseHandler || releaseHandler === listener.releaseHandler;\n\t\n\t        if (comboMatches && pressHandlerMatches && releaseHandlerMatches) {\n\t          this._listeners.splice(i, 1);\n\t          i -= 1;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setContext',\n\t    value: function setContext(contextName) {\n\t      if (this._locale) {\n\t        this.releaseAllKeys();\n\t      }\n\t\n\t      if (!this._contexts[contextName]) {\n\t        this._contexts[contextName] = [];\n\t      }\n\t      this._listeners = this._contexts[contextName];\n\t      this._currentContext = contextName;\n\t    }\n\t  }, {\n\t    key: 'getContext',\n\t    value: function getContext() {\n\t      return this._currentContext;\n\t    }\n\t  }, {\n\t    key: 'withContext',\n\t    value: function withContext(contextName, callback) {\n\t      var previousContextName = this.getContext();\n\t      this.setContext(contextName);\n\t\n\t      callback();\n\t\n\t      this.setContext(previousContextName);\n\t    }\n\t  }, {\n\t    key: 'watch',\n\t    value: function watch(targetWindow, targetElement, targetPlatform, targetUserAgent) {\n\t      var _this = this;\n\t\n\t      this.stop();\n\t\n\t      if (!targetWindow) {\n\t        if (!global.addEventListener && !global.attachEvent) {\n\t          throw new Error('Cannot find global functions addEventListener or attachEvent.');\n\t        }\n\t        targetWindow = global;\n\t      }\n\t\n\t      if (typeof targetWindow.nodeType === 'number') {\n\t        targetUserAgent = targetPlatform;\n\t        targetPlatform = targetElement;\n\t        targetElement = targetWindow;\n\t        targetWindow = global;\n\t      }\n\t\n\t      if (!targetWindow.addEventListener && !targetWindow.attachEvent) {\n\t        throw new Error('Cannot find addEventListener or attachEvent methods on targetWindow.');\n\t      }\n\t\n\t      this._isModernBrowser = !!targetWindow.addEventListener;\n\t\n\t      var userAgent = targetWindow.navigator && targetWindow.navigator.userAgent || '';\n\t      var platform = targetWindow.navigator && targetWindow.navigator.platform || '';\n\t\n\t      targetElement && targetElement !== null || (targetElement = targetWindow.document);\n\t      targetPlatform && targetPlatform !== null || (targetPlatform = platform);\n\t      targetUserAgent && targetUserAgent !== null || (targetUserAgent = userAgent);\n\t\n\t      this._targetKeyDownBinding = function (event) {\n\t        _this.pressKey(event.keyCode, event);\n\t      };\n\t      this._targetKeyUpBinding = function (event) {\n\t        _this.releaseKey(event.keyCode, event);\n\t      };\n\t      this._targetResetBinding = function (event) {\n\t        _this.releaseAllKeys(event);\n\t      };\n\t\n\t      this._bindEvent(targetElement, 'keydown', this._targetKeyDownBinding);\n\t      this._bindEvent(targetElement, 'keyup', this._targetKeyUpBinding);\n\t      this._bindEvent(targetWindow, 'focus', this._targetResetBinding);\n\t      this._bindEvent(targetWindow, 'blur', this._targetResetBinding);\n\t\n\t      this._targetElement = targetElement;\n\t      this._targetWindow = targetWindow;\n\t      this._targetPlatform = targetPlatform;\n\t      this._targetUserAgent = targetUserAgent;\n\t    }\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      if (!this._targetElement || !this._targetWindow) {\n\t        return;\n\t      }\n\t\n\t      this._unbindEvent(this._targetElement, 'keydown', this._targetKeyDownBinding);\n\t      this._unbindEvent(this._targetElement, 'keyup', this._targetKeyUpBinding);\n\t      this._unbindEvent(this._targetWindow, 'focus', this._targetResetBinding);\n\t      this._unbindEvent(this._targetWindow, 'blur', this._targetResetBinding);\n\t\n\t      this._targetWindow = null;\n\t      this._targetElement = null;\n\t    }\n\t  }, {\n\t    key: 'pressKey',\n\t    value: function pressKey(keyCode, event) {\n\t      if (this._paused) {\n\t        return;\n\t      }\n\t      if (!this._locale) {\n\t        throw new Error('Locale not set');\n\t      }\n\t\n\t      this._locale.pressKey(keyCode);\n\t      this._applyBindings(event);\n\t    }\n\t  }, {\n\t    key: 'releaseKey',\n\t    value: function releaseKey(keyCode, event) {\n\t      if (this._paused) {\n\t        return;\n\t      }\n\t      if (!this._locale) {\n\t        throw new Error('Locale not set');\n\t      }\n\t\n\t      this._locale.releaseKey(keyCode);\n\t      this._clearBindings(event);\n\t    }\n\t  }, {\n\t    key: 'releaseAllKeys',\n\t    value: function releaseAllKeys(event) {\n\t      if (this._paused) {\n\t        return;\n\t      }\n\t      if (!this._locale) {\n\t        throw new Error('Locale not set');\n\t      }\n\t\n\t      this._locale.pressedKeys.length = 0;\n\t      this._clearBindings(event);\n\t    }\n\t  }, {\n\t    key: 'pause',\n\t    value: function pause() {\n\t      if (this._paused) {\n\t        return;\n\t      }\n\t      if (this._locale) {\n\t        this.releaseAllKeys();\n\t      }\n\t      this._paused = true;\n\t    }\n\t  }, {\n\t    key: 'resume',\n\t    value: function resume() {\n\t      this._paused = false;\n\t    }\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.releaseAllKeys();\n\t      this._listeners.length = 0;\n\t    }\n\t  }, {\n\t    key: '_bindEvent',\n\t    value: function _bindEvent(targetElement, eventName, handler) {\n\t      return this._isModernBrowser ? targetElement.addEventListener(eventName, handler, false) : targetElement.attachEvent('on' + eventName, handler);\n\t    }\n\t  }, {\n\t    key: '_unbindEvent',\n\t    value: function _unbindEvent(targetElement, eventName, handler) {\n\t      return this._isModernBrowser ? targetElement.removeEventListener(eventName, handler, false) : targetElement.detachEvent('on' + eventName, handler);\n\t    }\n\t  }, {\n\t    key: '_getGroupedListeners',\n\t    value: function _getGroupedListeners() {\n\t      var listenerGroups = [];\n\t      var listenerGroupMap = [];\n\t\n\t      var listeners = this._listeners;\n\t      if (this._currentContext !== 'global') {\n\t        listeners = [].concat(listeners, this._contexts.global);\n\t      }\n\t\n\t      listeners.sort(function (a, b) {\n\t        return (b.keyCombo ? b.keyCombo.keyNames.length : 0) - (a.keyCombo ? a.keyCombo.keyNames.length : 0);\n\t      }).forEach(function (l) {\n\t        var mapIndex = -1;\n\t        for (var i = 0; i < listenerGroupMap.length; i += 1) {\n\t          if (listenerGroupMap[i] === null && l.keyCombo === null || listenerGroupMap[i] !== null && listenerGroupMap[i].isEqual(l.keyCombo)) {\n\t            mapIndex = i;\n\t          }\n\t        }\n\t        if (mapIndex === -1) {\n\t          mapIndex = listenerGroupMap.length;\n\t          listenerGroupMap.push(l.keyCombo);\n\t        }\n\t        if (!listenerGroups[mapIndex]) {\n\t          listenerGroups[mapIndex] = [];\n\t        }\n\t        listenerGroups[mapIndex].push(l);\n\t      });\n\t      return listenerGroups;\n\t    }\n\t  }, {\n\t    key: '_applyBindings',\n\t    value: function _applyBindings(event) {\n\t      var preventRepeat = false;\n\t\n\t      event || (event = {});\n\t      event.preventRepeat = function () {\n\t        preventRepeat = true;\n\t      };\n\t      event.pressedKeys = this._locale.pressedKeys.slice(0);\n\t\n\t      var pressedKeys = this._locale.pressedKeys.slice(0);\n\t      var listenerGroups = this._getGroupedListeners();\n\t\n\t      for (var i = 0; i < listenerGroups.length; i += 1) {\n\t        var listeners = listenerGroups[i];\n\t        var keyCombo = listeners[0].keyCombo;\n\t\n\t        if (keyCombo === null || keyCombo.check(pressedKeys)) {\n\t          for (var j = 0; j < listeners.length; j += 1) {\n\t            var listener = listeners[j];\n\t\n\t            if (keyCombo === null) {\n\t              listener = {\n\t                keyCombo: new _keyCombo2.default(pressedKeys.join('+')),\n\t                pressHandler: listener.pressHandler,\n\t                releaseHandler: listener.releaseHandler,\n\t                preventRepeat: listener.preventRepeat,\n\t                preventRepeatByDefault: listener.preventRepeatByDefault\n\t              };\n\t            }\n\t\n\t            if (listener.pressHandler && !listener.preventRepeat) {\n\t              listener.pressHandler.call(this, event);\n\t              if (preventRepeat) {\n\t                listener.preventRepeat = preventRepeat;\n\t                preventRepeat = false;\n\t              }\n\t            }\n\t\n\t            if (listener.releaseHandler && !this._appliedListeners.includes(listener)) {\n\t              this._appliedListeners.push(listener);\n\t            }\n\t          }\n\t\n\t          if (keyCombo) {\n\t            for (var j = 0; j < keyCombo.keyNames.length; j += 1) {\n\t              var index = pressedKeys.indexOf(keyCombo.keyNames[j]);\n\t              if (index !== -1) {\n\t                pressedKeys.splice(index, 1);\n\t                j -= 1;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: '_clearBindings',\n\t    value: function _clearBindings(event) {\n\t      event || (event = {});\n\t\n\t      for (var i = 0; i < this._appliedListeners.length; i += 1) {\n\t        var listener = this._appliedListeners[i];\n\t        var keyCombo = listener.keyCombo;\n\t        if (keyCombo === null || !keyCombo.check(this._locale.pressedKeys)) {\n\t          listener.preventRepeat = listener.preventRepeatByDefault;\n\t          listener.releaseHandler.call(this, event);\n\t          this._appliedListeners.splice(i, 1);\n\t          i -= 1;\n\t        }\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Keyboard;\n\t}();\n\t\n\tKeyboard.prototype.addListener = Keyboard.prototype.bind;\n\tKeyboard.prototype.on = Keyboard.prototype.bind;\n\t\n\tKeyboard.prototype.removeListener = Keyboard.prototype.unbind;\n\tKeyboard.prototype.off = Keyboard.prototype.unbind;\n\t\n\texports.default = Keyboard;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _keyCombo = __webpack_require__(3);\n\t\n\tvar _keyCombo2 = _interopRequireDefault(_keyCombo);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Locale = function () {\n\t  function Locale(name) {\n\t    _classCallCheck(this, Locale);\n\t\n\t    this.localeName = name;\n\t    this.pressedKeys = [];\n\t    this._appliedMacros = [];\n\t    this._keyMap = {};\n\t    this._killKeyCodes = [];\n\t    this._macros = [];\n\t  }\n\t\n\t  _createClass(Locale, [{\n\t    key: 'bindKeyCode',\n\t    value: function bindKeyCode(keyCode, keyNames) {\n\t      if (typeof keyNames === 'string') {\n\t        keyNames = [keyNames];\n\t      }\n\t\n\t      this._keyMap[keyCode] = keyNames;\n\t    }\n\t  }, {\n\t    key: 'bindMacro',\n\t    value: function bindMacro(keyComboStr, keyNames) {\n\t      if (typeof keyNames === 'string') {\n\t        keyNames = [keyNames];\n\t      }\n\t\n\t      var handler = null;\n\t      if (typeof keyNames === 'function') {\n\t        handler = keyNames;\n\t        keyNames = null;\n\t      }\n\t\n\t      var macro = {\n\t        keyCombo: new _keyCombo2.default(keyComboStr),\n\t        keyNames: keyNames,\n\t        handler: handler\n\t      };\n\t\n\t      this._macros.push(macro);\n\t    }\n\t  }, {\n\t    key: 'getKeyCodes',\n\t    value: function getKeyCodes(keyName) {\n\t      var keyCodes = [];\n\t      for (var keyCode in this._keyMap) {\n\t        var index = this._keyMap[keyCode].indexOf(keyName);\n\t        if (index > -1) {\n\t          keyCodes.push(keyCode | 0);\n\t        }\n\t      }\n\t      return keyCodes;\n\t    }\n\t  }, {\n\t    key: 'getKeyNames',\n\t    value: function getKeyNames(keyCode) {\n\t      return this._keyMap[keyCode] || [];\n\t    }\n\t  }, {\n\t    key: 'setKillKey',\n\t    value: function setKillKey(keyCode) {\n\t      if (typeof keyCode === 'string') {\n\t        var keyCodes = this.getKeyCodes(keyCode);\n\t        for (var i = 0; i < keyCodes.length; i += 1) {\n\t          this.setKillKey(keyCodes[i]);\n\t        }\n\t        return;\n\t      }\n\t\n\t      this._killKeyCodes.push(keyCode);\n\t    }\n\t  }, {\n\t    key: 'pressKey',\n\t    value: function pressKey(keyCode) {\n\t      if (typeof keyCode === 'string') {\n\t        var keyCodes = this.getKeyCodes(keyCode);\n\t        for (var i = 0; i < keyCodes.length; i += 1) {\n\t          this.pressKey(keyCodes[i]);\n\t        }\n\t        return;\n\t      }\n\t\n\t      var keyNames = this.getKeyNames(keyCode);\n\t      for (var i = 0; i < keyNames.length; i += 1) {\n\t        if (!this.pressedKeys.includes(keyNames[i])) {\n\t          this.pressedKeys.push(keyNames[i]);\n\t        }\n\t      }\n\t\n\t      this._applyMacros();\n\t    }\n\t  }, {\n\t    key: 'releaseKey',\n\t    value: function releaseKey(keyCode) {\n\t      if (typeof keyCode === 'string') {\n\t        var keyCodes = this.getKeyCodes(keyCode);\n\t        for (var i = 0; i < keyCodes.length; i += 1) {\n\t          this.releaseKey(keyCodes[i]);\n\t        }\n\t      } else {\n\t        var keyNames = this.getKeyNames(keyCode);\n\t        var killKeyCodeIndex = this._killKeyCodes.indexOf(keyCode);\n\t\n\t        if (killKeyCodeIndex > -1) {\n\t          this.pressedKeys.length = 0;\n\t        } else {\n\t          for (var i = 0; i < keyNames.length; i += 1) {\n\t            var index = this.pressedKeys.indexOf(keyNames[i]);\n\t            if (index > -1) {\n\t              this.pressedKeys.splice(index, 1);\n\t            }\n\t          }\n\t        }\n\t\n\t        this._clearMacros();\n\t      }\n\t    }\n\t  }, {\n\t    key: '_applyMacros',\n\t    value: function _applyMacros() {\n\t      var macros = this._macros.slice(0);\n\t      for (var i = 0; i < macros.length; i += 1) {\n\t        var macro = macros[i];\n\t        if (macro.keyCombo.check(this.pressedKeys)) {\n\t          if (macro.handler) {\n\t            macro.keyNames = macro.handler(this.pressedKeys);\n\t          }\n\t          for (var j = 0; j < macro.keyNames.length; j += 1) {\n\t            if (!this.pressedKeys.includes(macro.keyNames[j])) {\n\t              this.pressedKeys.push(macro.keyNames[j]);\n\t            }\n\t          }\n\t          this._appliedMacros.push(macro);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: '_clearMacros',\n\t    value: function _clearMacros() {\n\t      for (var i = 0; i < this._appliedMacros.length; i += 1) {\n\t        var macro = this._appliedMacros[i];\n\t        if (!macro.keyCombo.check(this.pressedKeys)) {\n\t          for (var j = 0; j < macro.keyNames.length; j += 1) {\n\t            var index = this.pressedKeys.indexOf(macro.keyNames[j]);\n\t            if (index > -1) {\n\t              this.pressedKeys.splice(index, 1);\n\t            }\n\t          }\n\t          if (macro.handler) {\n\t            macro.keyNames = null;\n\t          }\n\t          this._appliedMacros.splice(i, 1);\n\t          i -= 1;\n\t        }\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Locale;\n\t}();\n\t\n\texports.default = Locale;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar KeyCombo = function () {\n\t  function KeyCombo(keyComboStr) {\n\t    _classCallCheck(this, KeyCombo);\n\t\n\t    this.sourceStr = keyComboStr;\n\t    this.subCombos = KeyCombo.parseComboStr(keyComboStr);\n\t    this.keyNames = this.subCombos.reduce(function (memo, nextSubCombo) {\n\t      return memo.concat(nextSubCombo);\n\t    }, []);\n\t  }\n\t\n\t  _createClass(KeyCombo, [{\n\t    key: 'check',\n\t    value: function check(pressedKeyNames) {\n\t      var startingKeyNameIndex = 0;\n\t      for (var i = 0; i < this.subCombos.length; i += 1) {\n\t        startingKeyNameIndex = this._checkSubCombo(this.subCombos[i], startingKeyNameIndex, pressedKeyNames);\n\t        if (startingKeyNameIndex === -1) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'isEqual',\n\t    value: function isEqual(otherKeyCombo) {\n\t      if (!otherKeyCombo || typeof otherKeyCombo !== 'string' && (typeof otherKeyCombo === 'undefined' ? 'undefined' : _typeof(otherKeyCombo)) !== 'object') {\n\t        return false;\n\t      }\n\t\n\t      if (typeof otherKeyCombo === 'string') {\n\t        otherKeyCombo = new KeyCombo(otherKeyCombo);\n\t      }\n\t\n\t      if (this.subCombos.length !== otherKeyCombo.subCombos.length) {\n\t        return false;\n\t      }\n\t      for (var i = 0; i < this.subCombos.length; i += 1) {\n\t        if (this.subCombos[i].length !== otherKeyCombo.subCombos[i].length) {\n\t          return false;\n\t        }\n\t      }\n\t\n\t      for (var i = 0; i < this.subCombos.length; i += 1) {\n\t        var subCombo = this.subCombos[i];\n\t        var otherSubCombo = otherKeyCombo.subCombos[i].slice(0);\n\t\n\t        for (var j = 0; j < subCombo.length; j += 1) {\n\t          var keyName = subCombo[j];\n\t          var index = otherSubCombo.indexOf(keyName);\n\t\n\t          if (index > -1) {\n\t            otherSubCombo.splice(index, 1);\n\t          }\n\t        }\n\t        if (otherSubCombo.length !== 0) {\n\t          return false;\n\t        }\n\t      }\n\t\n\t      return true;\n\t    }\n\t  }, {\n\t    key: '_checkSubCombo',\n\t    value: function _checkSubCombo(subCombo, startingKeyNameIndex, pressedKeyNames) {\n\t      subCombo = subCombo.slice(0);\n\t      pressedKeyNames = pressedKeyNames.slice(startingKeyNameIndex);\n\t\n\t      var endIndex = startingKeyNameIndex;\n\t      for (var i = 0; i < subCombo.length; i += 1) {\n\t\n\t        var keyName = subCombo[i];\n\t        if (keyName[0] === '\\\\') {\n\t          var escapedKeyName = keyName.slice(1);\n\t          if (escapedKeyName === KeyCombo.comboDeliminator || escapedKeyName === KeyCombo.keyDeliminator) {\n\t            keyName = escapedKeyName;\n\t          }\n\t        }\n\t\n\t        var index = pressedKeyNames.indexOf(keyName);\n\t        if (index > -1) {\n\t          subCombo.splice(i, 1);\n\t          i -= 1;\n\t          if (index > endIndex) {\n\t            endIndex = index;\n\t          }\n\t          if (subCombo.length === 0) {\n\t            return endIndex;\n\t          }\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t  }]);\n\t\n\t  return KeyCombo;\n\t}();\n\t\n\t// TODO: Add support for key combo sequences\n\t\n\t\n\tKeyCombo.sequenceDeliminator = '>>';\n\tKeyCombo.comboDeliminator = '>';\n\tKeyCombo.keyDeliminator = '+';\n\t\n\tKeyCombo.parseComboStr = function (keyComboStr) {\n\t  var subComboStrs = KeyCombo._splitStr(keyComboStr, KeyCombo.comboDeliminator);\n\t  var combo = [];\n\t\n\t  for (var i = 0; i < subComboStrs.length; i += 1) {\n\t    combo.push(KeyCombo._splitStr(subComboStrs[i], KeyCombo.keyDeliminator));\n\t  }\n\t  return combo;\n\t};\n\t\n\tKeyCombo._splitStr = function (str, deliminator) {\n\t  var s = str;\n\t  var d = deliminator;\n\t  var c = '';\n\t  var ca = [];\n\t\n\t  for (var ci = 0; ci < s.length; ci += 1) {\n\t    if (ci > 0 && s[ci] === d && s[ci - 1] !== '\\\\') {\n\t      ca.push(c.trim());\n\t      c = '';\n\t      ci += 1;\n\t    }\n\t    c += s[ci];\n\t  }\n\t  if (c) {\n\t    ca.push(c.trim());\n\t  }\n\t\n\t  return ca;\n\t};\n\t\n\texports.default = KeyCombo;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (locale, platform, userAgent) {\n\t\n\t  // general\n\t  locale.bindKeyCode(3, ['cancel']);\n\t  locale.bindKeyCode(8, ['backspace']);\n\t  locale.bindKeyCode(9, ['tab']);\n\t  locale.bindKeyCode(12, ['clear']);\n\t  locale.bindKeyCode(13, ['enter']);\n\t  locale.bindKeyCode(16, ['shift']);\n\t  locale.bindKeyCode(17, ['ctrl']);\n\t  locale.bindKeyCode(18, ['alt', 'menu']);\n\t  locale.bindKeyCode(19, ['pause', 'break']);\n\t  locale.bindKeyCode(20, ['capslock']);\n\t  locale.bindKeyCode(27, ['escape', 'esc']);\n\t  locale.bindKeyCode(32, ['space', 'spacebar']);\n\t  locale.bindKeyCode(33, ['pageup']);\n\t  locale.bindKeyCode(34, ['pagedown']);\n\t  locale.bindKeyCode(35, ['end']);\n\t  locale.bindKeyCode(36, ['home']);\n\t  locale.bindKeyCode(37, ['left']);\n\t  locale.bindKeyCode(38, ['up']);\n\t  locale.bindKeyCode(39, ['right']);\n\t  locale.bindKeyCode(40, ['down']);\n\t  locale.bindKeyCode(41, ['select']);\n\t  locale.bindKeyCode(42, ['printscreen']);\n\t  locale.bindKeyCode(43, ['execute']);\n\t  locale.bindKeyCode(44, ['snapshot']);\n\t  locale.bindKeyCode(45, ['insert', 'ins']);\n\t  locale.bindKeyCode(46, ['delete', 'del']);\n\t  locale.bindKeyCode(47, ['help']);\n\t  locale.bindKeyCode(145, ['scrolllock', 'scroll']);\n\t  locale.bindKeyCode(187, ['equal', 'equalsign', '=']);\n\t  locale.bindKeyCode(188, ['comma', ',']);\n\t  locale.bindKeyCode(190, ['period', '.']);\n\t  locale.bindKeyCode(191, ['slash', 'forwardslash', '/']);\n\t  locale.bindKeyCode(192, ['graveaccent', '`']);\n\t  locale.bindKeyCode(219, ['openbracket', '[']);\n\t  locale.bindKeyCode(220, ['backslash', '\\\\']);\n\t  locale.bindKeyCode(221, ['closebracket', ']']);\n\t  locale.bindKeyCode(222, ['apostrophe', '\\'']);\n\t\n\t  // 0-9\n\t  locale.bindKeyCode(48, ['zero', '0']);\n\t  locale.bindKeyCode(49, ['one', '1']);\n\t  locale.bindKeyCode(50, ['two', '2']);\n\t  locale.bindKeyCode(51, ['three', '3']);\n\t  locale.bindKeyCode(52, ['four', '4']);\n\t  locale.bindKeyCode(53, ['five', '5']);\n\t  locale.bindKeyCode(54, ['six', '6']);\n\t  locale.bindKeyCode(55, ['seven', '7']);\n\t  locale.bindKeyCode(56, ['eight', '8']);\n\t  locale.bindKeyCode(57, ['nine', '9']);\n\t\n\t  // numpad\n\t  locale.bindKeyCode(96, ['numzero', 'num0']);\n\t  locale.bindKeyCode(97, ['numone', 'num1']);\n\t  locale.bindKeyCode(98, ['numtwo', 'num2']);\n\t  locale.bindKeyCode(99, ['numthree', 'num3']);\n\t  locale.bindKeyCode(100, ['numfour', 'num4']);\n\t  locale.bindKeyCode(101, ['numfive', 'num5']);\n\t  locale.bindKeyCode(102, ['numsix', 'num6']);\n\t  locale.bindKeyCode(103, ['numseven', 'num7']);\n\t  locale.bindKeyCode(104, ['numeight', 'num8']);\n\t  locale.bindKeyCode(105, ['numnine', 'num9']);\n\t  locale.bindKeyCode(106, ['nummultiply', 'num*']);\n\t  locale.bindKeyCode(107, ['numadd', 'num+']);\n\t  locale.bindKeyCode(108, ['numenter']);\n\t  locale.bindKeyCode(109, ['numsubtract', 'num-']);\n\t  locale.bindKeyCode(110, ['numdecimal', 'num.']);\n\t  locale.bindKeyCode(111, ['numdivide', 'num/']);\n\t  locale.bindKeyCode(144, ['numlock', 'num']);\n\t\n\t  // function keys\n\t  locale.bindKeyCode(112, ['f1']);\n\t  locale.bindKeyCode(113, ['f2']);\n\t  locale.bindKeyCode(114, ['f3']);\n\t  locale.bindKeyCode(115, ['f4']);\n\t  locale.bindKeyCode(116, ['f5']);\n\t  locale.bindKeyCode(117, ['f6']);\n\t  locale.bindKeyCode(118, ['f7']);\n\t  locale.bindKeyCode(119, ['f8']);\n\t  locale.bindKeyCode(120, ['f9']);\n\t  locale.bindKeyCode(121, ['f10']);\n\t  locale.bindKeyCode(122, ['f11']);\n\t  locale.bindKeyCode(123, ['f12']);\n\t\n\t  // secondary key symbols\n\t  locale.bindMacro('shift + `', ['tilde', '~']);\n\t  locale.bindMacro('shift + 1', ['exclamation', 'exclamationpoint', '!']);\n\t  locale.bindMacro('shift + 2', ['at', '@']);\n\t  locale.bindMacro('shift + 3', ['number', '#']);\n\t  locale.bindMacro('shift + 4', ['dollar', 'dollars', 'dollarsign', '$']);\n\t  locale.bindMacro('shift + 5', ['percent', '%']);\n\t  locale.bindMacro('shift + 6', ['caret', '^']);\n\t  locale.bindMacro('shift + 7', ['ampersand', 'and', '&']);\n\t  locale.bindMacro('shift + 8', ['asterisk', '*']);\n\t  locale.bindMacro('shift + 9', ['openparen', '(']);\n\t  locale.bindMacro('shift + 0', ['closeparen', ')']);\n\t  locale.bindMacro('shift + -', ['underscore', '_']);\n\t  locale.bindMacro('shift + =', ['plus', '+']);\n\t  locale.bindMacro('shift + [', ['opencurlybrace', 'opencurlybracket', '{']);\n\t  locale.bindMacro('shift + ]', ['closecurlybrace', 'closecurlybracket', '}']);\n\t  locale.bindMacro('shift + \\\\', ['verticalbar', '|']);\n\t  locale.bindMacro('shift + ;', ['colon', ':']);\n\t  locale.bindMacro('shift + \\'', ['quotationmark', '\\'']);\n\t  locale.bindMacro('shift + !,', ['openanglebracket', '<']);\n\t  locale.bindMacro('shift + .', ['closeanglebracket', '>']);\n\t  locale.bindMacro('shift + /', ['questionmark', '?']);\n\t\n\t  //a-z and A-Z\n\t  for (var keyCode = 65; keyCode <= 90; keyCode += 1) {\n\t    var keyName = String.fromCharCode(keyCode + 32);\n\t    var capitalKeyName = String.fromCharCode(keyCode);\n\t    locale.bindKeyCode(keyCode, keyName);\n\t    locale.bindMacro('shift + ' + keyName, capitalKeyName);\n\t    locale.bindMacro('capslock + ' + keyName, capitalKeyName);\n\t  }\n\t\n\t  // browser caveats\n\t  var semicolonKeyCode = userAgent.match('Firefox') ? 59 : 186;\n\t  var dashKeyCode = userAgent.match('Firefox') ? 173 : 189;\n\t  var leftCommandKeyCode = void 0;\n\t  var rightCommandKeyCode = void 0;\n\t  if (platform.match('Mac') && (userAgent.match('Safari') || userAgent.match('Chrome'))) {\n\t    leftCommandKeyCode = 91;\n\t    rightCommandKeyCode = 93;\n\t  } else if (platform.match('Mac') && userAgent.match('Opera')) {\n\t    leftCommandKeyCode = 17;\n\t    rightCommandKeyCode = 17;\n\t  } else if (platform.match('Mac') && userAgent.match('Firefox')) {\n\t    leftCommandKeyCode = 224;\n\t    rightCommandKeyCode = 224;\n\t  }\n\t  locale.bindKeyCode(semicolonKeyCode, ['semicolon', ';']);\n\t  locale.bindKeyCode(dashKeyCode, ['dash', '-']);\n\t  locale.bindKeyCode(leftCommandKeyCode, ['command', 'windows', 'win', 'super', 'leftcommand', 'leftwindows', 'leftwin', 'leftsuper']);\n\t  locale.bindKeyCode(rightCommandKeyCode, ['command', 'windows', 'win', 'super', 'rightcommand', 'rightwindows', 'rightwin', 'rightsuper']);\n\t\n\t  // kill keys\n\t  locale.setKillKey('command');\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// keyboard.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fc75acd25e5136957a53","\nimport Keyboard from './lib/keyboard';\nimport Locale from './lib/locale';\nimport KeyCombo from './lib/key-combo';\nimport usLocale from './locales/us';\n\nconst keyboard = new Keyboard();\nkeyboard.setLocale('us', usLocale);\n\nmodule.exports = keyboard;\nexport { Keyboard };\nexport { Locale} ;\nexport { KeyCombo };\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","\nimport Locale from './locale';\nimport KeyCombo from './key-combo';\n\n\nclass Keyboard {\n  constructor(targetWindow, targetElement, platform, userAgent) {\n    this._locale               = null;\n    this._currentContext       = null;\n    this._contexts             = {};\n    this._listeners            = [];\n    this._appliedListeners     = [];\n    this._locales              = {};\n    this._targetElement        = null;\n    this._targetWindow         = null;\n    this._targetPlatform       = '';\n    this._targetUserAgent      = '';\n    this._isModernBrowser      = false;\n    this._targetKeyDownBinding = null;\n    this._targetKeyUpBinding   = null;\n    this._targetResetBinding   = null;\n    this._paused               = false;\n\n    this.setContext('global');\n    this.watch(targetWindow, targetElement, platform, userAgent);\n  }\n\n  setLocale(localeName, localeBuilder) {\n    let locale = null;\n    if (typeof localeName === 'string') {\n\n      if (localeBuilder) {\n        locale = new Locale(localeName);\n        localeBuilder(locale, this._targetPlatform, this._targetUserAgent);\n      } else {\n        locale = this._locales[localeName] || null;\n      }\n    } else {\n      locale     = localeName;\n      localeName = locale._localeName;\n    }\n\n    this._locale              = locale;\n    this._locales[localeName] = locale;\n    if (locale) {\n      this._locale.pressedKeys = locale.pressedKeys;\n    }\n  }\n\n  getLocale(localName) {\n    localName || (localName = this._locale.localeName);\n    return this._locales[localName] || null;\n  }\n\n  bind(keyComboStr, pressHandler, releaseHandler, preventRepeatByDefault) {\n    if (keyComboStr === null || typeof keyComboStr === 'function') {\n      preventRepeatByDefault = releaseHandler;\n      releaseHandler         = pressHandler;\n      pressHandler           = keyComboStr;\n      keyComboStr            = null;\n    }\n\n    if (\n      keyComboStr &&\n      typeof keyComboStr === 'object' &&\n      typeof keyComboStr.length === 'number'\n    ) {\n      for (let i = 0; i < keyComboStr.length; i += 1) {\n        this.bind(keyComboStr[i], pressHandler, releaseHandler);\n      }\n      return;\n    }\n\n    this._listeners.push({\n      keyCombo               : keyComboStr ? new KeyCombo(keyComboStr) : null,\n      pressHandler           : pressHandler           || null,\n      releaseHandler         : releaseHandler         || null,\n      preventRepeat          : preventRepeatByDefault || false,\n      preventRepeatByDefault : preventRepeatByDefault || false\n    });\n  }\n\n  unbind(keyComboStr, pressHandler, releaseHandler) {\n    if (keyComboStr === null || typeof keyComboStr === 'function') {\n      releaseHandler = pressHandler;\n      pressHandler   = keyComboStr;\n      keyComboStr = null;\n    }\n\n    if (\n      keyComboStr &&\n      typeof keyComboStr === 'object' &&\n      typeof keyComboStr.length === 'number'\n    ) {\n      for (var i = 0; i < keyComboStr.length; i += 1) {\n        this.unbind(keyComboStr[i], pressHandler, releaseHandler);\n      }\n      return;\n    }\n\n    for (var i = 0; i < this._listeners.length; i += 1) {\n      const listener = this._listeners[i];\n\n      const comboMatches          = !keyComboStr && !listener.keyCombo ||\n                                  listener.keyCombo && listener.keyCombo.isEqual(keyComboStr);\n      const pressHandlerMatches   = !pressHandler && !releaseHandler ||\n                                  !pressHandler && !listener.pressHandler ||\n                                  pressHandler === listener.pressHandler;\n      const releaseHandlerMatches = !pressHandler && !releaseHandler ||\n                                  !releaseHandler && !listener.releaseHandler ||\n                                  releaseHandler === listener.releaseHandler;\n\n      if (comboMatches && pressHandlerMatches && releaseHandlerMatches) {\n        this._listeners.splice(i, 1);\n        i -= 1;\n      }\n    }\n  }\n\n  setContext(contextName) {\n    if(this._locale) { this.releaseAllKeys(); }\n\n    if (!this._contexts[contextName]) {\n      this._contexts[contextName] = [];\n    }\n    this._listeners      = this._contexts[contextName];\n    this._currentContext = contextName;\n  }\n\n  getContext() {\n    return this._currentContext;\n  }\n\n  withContext(contextName, callback) {\n    const previousContextName = this.getContext();\n    this.setContext(contextName);\n\n    callback();\n\n    this.setContext(previousContextName);\n  }\n\n  watch(targetWindow, targetElement, targetPlatform, targetUserAgent) {\n    this.stop();\n\n    if (!targetWindow) {\n      if (!global.addEventListener && !global.attachEvent) {\n        throw new Error('Cannot find global functions addEventListener or attachEvent.');\n      }\n      targetWindow = global;\n    }\n\n    if (typeof targetWindow.nodeType === 'number') {\n      targetUserAgent = targetPlatform;\n      targetPlatform  = targetElement;\n      targetElement   = targetWindow;\n      targetWindow    = global;\n    }\n\n    if (!targetWindow.addEventListener && !targetWindow.attachEvent) {\n      throw new Error('Cannot find addEventListener or attachEvent methods on targetWindow.');\n    }\n\n    this._isModernBrowser = !!targetWindow.addEventListener;\n\n    const userAgent = targetWindow.navigator && targetWindow.navigator.userAgent || '';\n    const platform  = targetWindow.navigator && targetWindow.navigator.platform  || '';\n\n    targetElement   && targetElement   !== null || (targetElement   = targetWindow.document);\n    targetPlatform  && targetPlatform  !== null || (targetPlatform  = platform);\n    targetUserAgent && targetUserAgent !== null || (targetUserAgent = userAgent);\n\n    this._targetKeyDownBinding = event => {\n      this.pressKey(event.keyCode, event);\n    };\n    this._targetKeyUpBinding = event => {\n      this.releaseKey(event.keyCode, event);\n    };\n    this._targetResetBinding = event => {\n      this.releaseAllKeys(event)\n    };\n\n    this._bindEvent(targetElement, 'keydown', this._targetKeyDownBinding);\n    this._bindEvent(targetElement, 'keyup',   this._targetKeyUpBinding);\n    this._bindEvent(targetWindow,  'focus',   this._targetResetBinding);\n    this._bindEvent(targetWindow,  'blur',    this._targetResetBinding);\n\n    this._targetElement   = targetElement;\n    this._targetWindow    = targetWindow;\n    this._targetPlatform  = targetPlatform;\n    this._targetUserAgent = targetUserAgent;\n  }\n\n  stop() {\n    if (!this._targetElement || !this._targetWindow) { return; }\n\n    this._unbindEvent(this._targetElement, 'keydown', this._targetKeyDownBinding);\n    this._unbindEvent(this._targetElement, 'keyup',   this._targetKeyUpBinding);\n    this._unbindEvent(this._targetWindow,  'focus',   this._targetResetBinding);\n    this._unbindEvent(this._targetWindow,  'blur',    this._targetResetBinding);\n\n    this._targetWindow  = null;\n    this._targetElement = null;\n  }\n\n  pressKey(keyCode, event) {\n    if (this._paused) { return; }\n    if (!this._locale) { throw new Error('Locale not set'); }\n\n    this._locale.pressKey(keyCode);\n    this._applyBindings(event);\n  }\n\n  releaseKey(keyCode, event) {\n    if (this._paused) { return; }\n    if (!this._locale) { throw new Error('Locale not set'); }\n\n    this._locale.releaseKey(keyCode);\n    this._clearBindings(event);\n  }\n\n  releaseAllKeys(event) {\n    if (this._paused) { return; }\n    if (!this._locale) { throw new Error('Locale not set'); }\n\n    this._locale.pressedKeys.length = 0;\n    this._clearBindings(event);\n  }\n\n  pause() {\n    if (this._paused) { return; }\n    if (this._locale) { this.releaseAllKeys(); }\n    this._paused = true;\n  }\n\n  resume() {\n    this._paused = false;\n  }\n\n  reset() {\n    this.releaseAllKeys();\n    this._listeners.length = 0;\n  }\n\n  _bindEvent(targetElement, eventName, handler) {\n    return this._isModernBrowser ?\n      targetElement.addEventListener(eventName, handler, false) :\n      targetElement.attachEvent(`on${eventName}`, handler);\n  }\n\n  _unbindEvent(targetElement, eventName, handler) {\n    return this._isModernBrowser ?\n      targetElement.removeEventListener(eventName, handler, false) :\n      targetElement.detachEvent(`on${eventName}`, handler);\n  }\n\n  _getGroupedListeners() {\n    const listenerGroups   = [];\n    const listenerGroupMap = [];\n\n    let listeners = this._listeners;\n    if (this._currentContext !== 'global') {\n      listeners = [].concat(listeners, this._contexts.global);\n    }\n\n    listeners\n      .sort((a, b) => (b.keyCombo ? b.keyCombo.keyNames.length : 0) - (a.keyCombo ? a.keyCombo.keyNames.length : 0))\n      .forEach(l => {\n        let mapIndex = -1;\n        for (let i = 0; i < listenerGroupMap.length; i += 1) {\n          if (listenerGroupMap[i] === null && l.keyCombo === null ||\n              listenerGroupMap[i] !== null && listenerGroupMap[i].isEqual(l.keyCombo)) {\n            mapIndex = i;\n          }\n        }\n        if (mapIndex === -1) {\n          mapIndex = listenerGroupMap.length;\n          listenerGroupMap.push(l.keyCombo);\n        }\n        if (!listenerGroups[mapIndex]) {\n          listenerGroups[mapIndex] = [];\n        }\n        listenerGroups[mapIndex].push(l);\n      });\n    return listenerGroups;\n  }\n\n  _applyBindings(event) {\n    let preventRepeat = false;\n\n    event || (event = {});\n    event.preventRepeat = () => { preventRepeat = true; };\n    event.pressedKeys   = this._locale.pressedKeys.slice(0);\n\n    const pressedKeys    = this._locale.pressedKeys.slice(0);\n    const listenerGroups = this._getGroupedListeners();\n\n\n    for (let i = 0; i < listenerGroups.length; i += 1) {\n      const listeners = listenerGroups[i];\n      const keyCombo  = listeners[0].keyCombo;\n\n      if (keyCombo === null || keyCombo.check(pressedKeys)) {\n        for (var j = 0; j < listeners.length; j += 1) {\n          let listener = listeners[j];\n\n          if (keyCombo === null) {\n            listener = {\n              keyCombo               : new KeyCombo(pressedKeys.join('+')),\n              pressHandler           : listener.pressHandler,\n              releaseHandler         : listener.releaseHandler,\n              preventRepeat          : listener.preventRepeat,\n              preventRepeatByDefault : listener.preventRepeatByDefault\n            };\n          }\n\n          if (listener.pressHandler && !listener.preventRepeat) {\n            listener.pressHandler.call(this, event);\n            if (preventRepeat) {\n              listener.preventRepeat = preventRepeat;\n              preventRepeat          = false;\n            }\n          }\n\n          if (listener.releaseHandler && !this._appliedListeners.includes(listener)) {\n            this._appliedListeners.push(listener);\n          }\n        }\n\n        if (keyCombo) {\n          for (var j = 0; j < keyCombo.keyNames.length; j += 1) {\n            const index = pressedKeys.indexOf(keyCombo.keyNames[j]);\n            if (index !== -1) {\n              pressedKeys.splice(index, 1);\n              j -= 1;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  _clearBindings(event) {\n    event || (event = {});\n\n    for (let i = 0; i < this._appliedListeners.length; i += 1) {\n      const listener = this._appliedListeners[i];\n      const keyCombo = listener.keyCombo;\n      if (keyCombo === null || !keyCombo.check(this._locale.pressedKeys)) {\n        listener.preventRepeat = listener.preventRepeatByDefault;\n        listener.releaseHandler.call(this, event);\n        this._appliedListeners.splice(i, 1);\n        i -= 1;\n      }\n    }\n  }\n}\n\nKeyboard.prototype.addListener = Keyboard.prototype.bind;\nKeyboard.prototype.on          = Keyboard.prototype.bind;\n\nKeyboard.prototype.removeListener = Keyboard.prototype.unbind;\nKeyboard.prototype.off            = Keyboard.prototype.unbind;\n\nexport default Keyboard;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/keyboard.js","\nimport KeyCombo from './key-combo';\n\n\nclass Locale {\n  constructor(name) {\n    this.localeName     = name;\n    this.pressedKeys    = [];\n    this._appliedMacros = [];\n    this._keyMap        = {};\n    this._killKeyCodes  = [];\n    this._macros        = [];\n  }\n\n  bindKeyCode(keyCode, keyNames) {\n    if (typeof keyNames === 'string') {\n      keyNames = [keyNames];\n    }\n\n    this._keyMap[keyCode] = keyNames;\n  }\n\n  bindMacro(keyComboStr, keyNames) {\n    if (typeof keyNames === 'string') {\n      keyNames = [ keyNames ];\n    }\n\n    let handler = null;\n    if (typeof keyNames === 'function') {\n      handler = keyNames;\n      keyNames = null;\n    }\n\n    const macro = {\n      keyCombo : new KeyCombo(keyComboStr),\n      keyNames,\n      handler\n    };\n\n    this._macros.push(macro);\n  }\n\n  getKeyCodes(keyName) {\n    const keyCodes = [];\n    for (const keyCode in this._keyMap) {\n      const index = this._keyMap[keyCode].indexOf(keyName);\n      if (index > -1) { keyCodes.push(keyCode|0); }\n    }\n    return keyCodes;\n  }\n\n  getKeyNames(keyCode) {\n    return this._keyMap[keyCode] || [];\n  }\n\n  setKillKey(keyCode) {\n    if (typeof keyCode === 'string') {\n      const keyCodes = this.getKeyCodes(keyCode);\n      for (let i = 0; i < keyCodes.length; i += 1) {\n        this.setKillKey(keyCodes[i]);\n      }\n      return;\n    }\n\n    this._killKeyCodes.push(keyCode);\n  }\n\n  pressKey(keyCode) {\n    if (typeof keyCode === 'string') {\n      const keyCodes = this.getKeyCodes(keyCode);\n      for (var i = 0; i < keyCodes.length; i += 1) {\n        this.pressKey(keyCodes[i]);\n      }\n      return;\n    }\n\n    const keyNames = this.getKeyNames(keyCode);\n    for (var i = 0; i < keyNames.length; i += 1) {\n      if (!this.pressedKeys.includes(keyNames[i])) {\n        this.pressedKeys.push(keyNames[i]);\n      }\n    }\n\n    this._applyMacros();\n  }\n\n  releaseKey(keyCode) {\n    if (typeof keyCode === 'string') {\n      const keyCodes = this.getKeyCodes(keyCode);\n      for (var i = 0; i < keyCodes.length; i += 1) {\n        this.releaseKey(keyCodes[i]);\n      }\n    }\n\n    else {\n      const keyNames         = this.getKeyNames(keyCode);\n      const killKeyCodeIndex = this._killKeyCodes.indexOf(keyCode);\n      \n      if (killKeyCodeIndex > -1) {\n        this.pressedKeys.length = 0;\n      } else {\n        for (var i = 0; i < keyNames.length; i += 1) {\n          const index = this.pressedKeys.indexOf(keyNames[i]);\n          if (index > -1) {\n            this.pressedKeys.splice(index, 1);\n          }\n        }\n      }\n\n      this._clearMacros();\n    }\n  }\n\n  _applyMacros() {\n    const macros = this._macros.slice(0);\n    for (let i = 0; i < macros.length; i += 1) {\n      const macro = macros[i];\n      if (macro.keyCombo.check(this.pressedKeys)) {\n        if (macro.handler) {\n          macro.keyNames = macro.handler(this.pressedKeys);\n        }\n        for (let j = 0; j < macro.keyNames.length; j += 1) {\n          if (!this.pressedKeys.includes(macro.keyNames[j])) {\n            this.pressedKeys.push(macro.keyNames[j]);\n          }\n        }\n        this._appliedMacros.push(macro);\n      }\n    }\n  }\n\n  _clearMacros() {\n    for (let i = 0; i < this._appliedMacros.length; i += 1) {\n      const macro = this._appliedMacros[i];\n      if (!macro.keyCombo.check(this.pressedKeys)) {\n        for (let j = 0; j < macro.keyNames.length; j += 1) {\n          const index = this.pressedKeys.indexOf(macro.keyNames[j]);\n          if (index > -1) {\n            this.pressedKeys.splice(index, 1);\n          }\n        }\n        if (macro.handler) {\n          macro.keyNames = null;\n        }\n        this._appliedMacros.splice(i, 1);\n        i -= 1;\n      }\n    }\n  }\n}\n\n\nexport default Locale;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/locale.js","\nclass KeyCombo {\n  constructor(keyComboStr) {\n    this.sourceStr = keyComboStr;\n    this.subCombos = KeyCombo.parseComboStr(keyComboStr);\n    this.keyNames  = this.subCombos.reduce((memo, nextSubCombo) => memo.concat(nextSubCombo), []);\n  }\n\n  check(pressedKeyNames) {\n    let startingKeyNameIndex = 0;\n    for (let i = 0; i < this.subCombos.length; i += 1) {\n      startingKeyNameIndex = this._checkSubCombo(\n        this.subCombos[i],\n        startingKeyNameIndex,\n        pressedKeyNames\n      );\n      if (startingKeyNameIndex === -1) { return false; }\n    }\n    return true;\n  }\n\n  isEqual(otherKeyCombo) {\n    if (\n      !otherKeyCombo ||\n      typeof otherKeyCombo !== 'string' &&\n      typeof otherKeyCombo !== 'object'\n    ) { return false; }\n\n    if (typeof otherKeyCombo === 'string') {\n      otherKeyCombo = new KeyCombo(otherKeyCombo);\n    }\n\n    if (this.subCombos.length !== otherKeyCombo.subCombos.length) {\n      return false;\n    }\n    for (var i = 0; i < this.subCombos.length; i += 1) {\n      if (this.subCombos[i].length !== otherKeyCombo.subCombos[i].length) {\n        return false;\n      }\n    }\n\n    for (var i = 0; i < this.subCombos.length; i += 1) {\n      const subCombo      = this.subCombos[i];\n      const otherSubCombo = otherKeyCombo.subCombos[i].slice(0);\n\n      for (let j = 0; j < subCombo.length; j += 1) {\n        const keyName = subCombo[j];\n        const index   = otherSubCombo.indexOf(keyName);\n\n        if (index > -1) {\n          otherSubCombo.splice(index, 1);\n        }\n      }\n      if (otherSubCombo.length !== 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  _checkSubCombo(subCombo, startingKeyNameIndex, pressedKeyNames) {\n    subCombo = subCombo.slice(0);\n    pressedKeyNames = pressedKeyNames.slice(startingKeyNameIndex);\n\n    let endIndex = startingKeyNameIndex;\n    for (let i = 0; i < subCombo.length; i += 1) {\n\n      let keyName = subCombo[i];\n      if (keyName[0] === '\\\\') {\n        const escapedKeyName = keyName.slice(1);\n        if (\n          escapedKeyName === KeyCombo.comboDeliminator ||\n          escapedKeyName === KeyCombo.keyDeliminator\n        ) {\n          keyName = escapedKeyName;\n        }\n      }\n\n      const index = pressedKeyNames.indexOf(keyName);\n      if (index > -1) {\n        subCombo.splice(i, 1);\n        i -= 1;\n        if (index > endIndex) {\n          endIndex = index;\n        }\n        if (subCombo.length === 0) {\n          return endIndex;\n        }\n      }\n    }\n    return -1;\n  }\n}\n\n// TODO: Add support for key combo sequences\nKeyCombo.sequenceDeliminator = '>>';\nKeyCombo.comboDeliminator    = '>';\nKeyCombo.keyDeliminator      = '+';\n\nKeyCombo.parseComboStr = keyComboStr => {\n  const subComboStrs = KeyCombo._splitStr(keyComboStr, KeyCombo.comboDeliminator);\n  const combo        = [];\n\n  for (let i = 0 ; i < subComboStrs.length; i += 1) {\n    combo.push(KeyCombo._splitStr(subComboStrs[i], KeyCombo.keyDeliminator));\n  }\n  return combo;\n};\n\nKeyCombo._splitStr = (str, deliminator) => {\n  const s  = str;\n  const d  = deliminator;\n  let c  = '';\n  const ca = [];\n\n  for (let ci = 0; ci < s.length; ci += 1) {\n    if (ci > 0 && s[ci] === d && s[ci - 1] !== '\\\\') {\n      ca.push(c.trim());\n      c = '';\n      ci += 1;\n    }\n    c += s[ci];\n  }\n  if (c) { ca.push(c.trim()); }\n\n  return ca;\n};\n\n\nexport default KeyCombo;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/key-combo.js","\nexport default (locale, platform, userAgent) => {\n\n  // general\n  locale.bindKeyCode(3,   ['cancel']);\n  locale.bindKeyCode(8,   ['backspace']);\n  locale.bindKeyCode(9,   ['tab']);\n  locale.bindKeyCode(12,  ['clear']);\n  locale.bindKeyCode(13,  ['enter']);\n  locale.bindKeyCode(16,  ['shift']);\n  locale.bindKeyCode(17,  ['ctrl']);\n  locale.bindKeyCode(18,  ['alt', 'menu']);\n  locale.bindKeyCode(19,  ['pause', 'break']);\n  locale.bindKeyCode(20,  ['capslock']);\n  locale.bindKeyCode(27,  ['escape', 'esc']);\n  locale.bindKeyCode(32,  ['space', 'spacebar']);\n  locale.bindKeyCode(33,  ['pageup']);\n  locale.bindKeyCode(34,  ['pagedown']);\n  locale.bindKeyCode(35,  ['end']);\n  locale.bindKeyCode(36,  ['home']);\n  locale.bindKeyCode(37,  ['left']);\n  locale.bindKeyCode(38,  ['up']);\n  locale.bindKeyCode(39,  ['right']);\n  locale.bindKeyCode(40,  ['down']);\n  locale.bindKeyCode(41,  ['select']);\n  locale.bindKeyCode(42,  ['printscreen']);\n  locale.bindKeyCode(43,  ['execute']);\n  locale.bindKeyCode(44,  ['snapshot']);\n  locale.bindKeyCode(45,  ['insert', 'ins']);\n  locale.bindKeyCode(46,  ['delete', 'del']);\n  locale.bindKeyCode(47,  ['help']);\n  locale.bindKeyCode(145, ['scrolllock', 'scroll']);\n  locale.bindKeyCode(187, ['equal', 'equalsign', '=']);\n  locale.bindKeyCode(188, ['comma', ',']);\n  locale.bindKeyCode(190, ['period', '.']);\n  locale.bindKeyCode(191, ['slash', 'forwardslash', '/']);\n  locale.bindKeyCode(192, ['graveaccent', '`']);\n  locale.bindKeyCode(219, ['openbracket', '[']);\n  locale.bindKeyCode(220, ['backslash', '\\\\']);\n  locale.bindKeyCode(221, ['closebracket', ']']);\n  locale.bindKeyCode(222, ['apostrophe', '\\'']);\n\n  // 0-9\n  locale.bindKeyCode(48, ['zero', '0']);\n  locale.bindKeyCode(49, ['one', '1']);\n  locale.bindKeyCode(50, ['two', '2']);\n  locale.bindKeyCode(51, ['three', '3']);\n  locale.bindKeyCode(52, ['four', '4']);\n  locale.bindKeyCode(53, ['five', '5']);\n  locale.bindKeyCode(54, ['six', '6']);\n  locale.bindKeyCode(55, ['seven', '7']);\n  locale.bindKeyCode(56, ['eight', '8']);\n  locale.bindKeyCode(57, ['nine', '9']);\n\n  // numpad\n  locale.bindKeyCode(96, ['numzero', 'num0']);\n  locale.bindKeyCode(97, ['numone', 'num1']);\n  locale.bindKeyCode(98, ['numtwo', 'num2']);\n  locale.bindKeyCode(99, ['numthree', 'num3']);\n  locale.bindKeyCode(100, ['numfour', 'num4']);\n  locale.bindKeyCode(101, ['numfive', 'num5']);\n  locale.bindKeyCode(102, ['numsix', 'num6']);\n  locale.bindKeyCode(103, ['numseven', 'num7']);\n  locale.bindKeyCode(104, ['numeight', 'num8']);\n  locale.bindKeyCode(105, ['numnine', 'num9']);\n  locale.bindKeyCode(106, ['nummultiply', 'num*']);\n  locale.bindKeyCode(107, ['numadd', 'num+']);\n  locale.bindKeyCode(108, ['numenter']);\n  locale.bindKeyCode(109, ['numsubtract', 'num-']);\n  locale.bindKeyCode(110, ['numdecimal', 'num.']);\n  locale.bindKeyCode(111, ['numdivide', 'num/']);\n  locale.bindKeyCode(144, ['numlock', 'num']);\n\n  // function keys\n  locale.bindKeyCode(112, ['f1']);\n  locale.bindKeyCode(113, ['f2']);\n  locale.bindKeyCode(114, ['f3']);\n  locale.bindKeyCode(115, ['f4']);\n  locale.bindKeyCode(116, ['f5']);\n  locale.bindKeyCode(117, ['f6']);\n  locale.bindKeyCode(118, ['f7']);\n  locale.bindKeyCode(119, ['f8']);\n  locale.bindKeyCode(120, ['f9']);\n  locale.bindKeyCode(121, ['f10']);\n  locale.bindKeyCode(122, ['f11']);\n  locale.bindKeyCode(123, ['f12']);\n\n  // secondary key symbols\n  locale.bindMacro('shift + `', ['tilde', '~']);\n  locale.bindMacro('shift + 1', ['exclamation', 'exclamationpoint', '!']);\n  locale.bindMacro('shift + 2', ['at', '@']);\n  locale.bindMacro('shift + 3', ['number', '#']);\n  locale.bindMacro('shift + 4', ['dollar', 'dollars', 'dollarsign', '$']);\n  locale.bindMacro('shift + 5', ['percent', '%']);\n  locale.bindMacro('shift + 6', ['caret', '^']);\n  locale.bindMacro('shift + 7', ['ampersand', 'and', '&']);\n  locale.bindMacro('shift + 8', ['asterisk', '*']);\n  locale.bindMacro('shift + 9', ['openparen', '(']);\n  locale.bindMacro('shift + 0', ['closeparen', ')']);\n  locale.bindMacro('shift + -', ['underscore', '_']);\n  locale.bindMacro('shift + =', ['plus', '+']);\n  locale.bindMacro('shift + [', ['opencurlybrace', 'opencurlybracket', '{']);\n  locale.bindMacro('shift + ]', ['closecurlybrace', 'closecurlybracket', '}']);\n  locale.bindMacro('shift + \\\\', ['verticalbar', '|']);\n  locale.bindMacro('shift + ;', ['colon', ':']);\n  locale.bindMacro('shift + \\'', ['quotationmark', '\\'']);\n  locale.bindMacro('shift + !,', ['openanglebracket', '<']);\n  locale.bindMacro('shift + .', ['closeanglebracket', '>']);\n  locale.bindMacro('shift + /', ['questionmark', '?']);\n\n  //a-z and A-Z\n  for (let keyCode = 65; keyCode <= 90; keyCode += 1) {\n    const keyName = String.fromCharCode(keyCode + 32);\n    const capitalKeyName = String.fromCharCode(keyCode);\n  \tlocale.bindKeyCode(keyCode, keyName);\n  \tlocale.bindMacro('shift + ' + keyName, capitalKeyName);\n  \tlocale.bindMacro('capslock + ' + keyName, capitalKeyName);\n  }\n\n  // browser caveats\n  const semicolonKeyCode = userAgent.match('Firefox') ? 59  : 186;\n  const dashKeyCode      = userAgent.match('Firefox') ? 173 : 189;\n  let leftCommandKeyCode;\n  let rightCommandKeyCode;\n  if (platform.match('Mac') && (userAgent.match('Safari') || userAgent.match('Chrome'))) {\n    leftCommandKeyCode  = 91;\n    rightCommandKeyCode = 93;\n  } else if(platform.match('Mac') && userAgent.match('Opera')) {\n    leftCommandKeyCode  = 17;\n    rightCommandKeyCode = 17;\n  } else if(platform.match('Mac') && userAgent.match('Firefox')) {\n    leftCommandKeyCode  = 224;\n    rightCommandKeyCode = 224;\n  }\n  locale.bindKeyCode(semicolonKeyCode,    ['semicolon', ';']);\n  locale.bindKeyCode(dashKeyCode,         ['dash', '-']);\n  locale.bindKeyCode(leftCommandKeyCode,  ['command', 'windows', 'win', 'super', 'leftcommand', 'leftwindows', 'leftwin', 'leftsuper']);\n  locale.bindKeyCode(rightCommandKeyCode, ['command', 'windows', 'win', 'super', 'rightcommand', 'rightwindows', 'rightwin', 'rightsuper']);\n\n  // kill keys\n  locale.setKillKey('command');\n};\n\n\n\n// WEBPACK FOOTER //\n// ./locales/us.js"],"sourceRoot":""}